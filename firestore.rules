rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOrganization() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isOrganization == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(userId);
    }

    // Issues collection
    match /issues/{issueId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOrganization() || isOwner(resource.data.userId);
      allow delete: if isOwner(resource.data.userId);
    }

    // Comments collection
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.userId);
    }

    // Organizations collection
    match /organizations/{orgId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only managed by admin
    }
  }
} 